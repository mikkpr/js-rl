{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rot-js/lib/rng.js","webpack:///./node_modules/rot-js/lib/util.js","webpack:///./node_modules/rot-js/lib/color.js","webpack:///./node_modules/rot-js/lib/display/backend.js","webpack:///./src/index.ts","webpack:///./node_modules/ecsy/build/ecsy.module.js","webpack:///./src/state.ts","webpack:///./src/map.ts","webpack:///./src/ecs/components/index.ts","webpack:///./node_modules/rot-js/lib/display/canvas.js","webpack:///./node_modules/rot-js/lib/display/hex.js","webpack:///./node_modules/rot-js/lib/display/rect.js","webpack:///./node_modules/rot-js/lib/display/tile.js","webpack:///./node_modules/rot-js/lib/display/tile-gl.js","webpack:///./node_modules/rot-js/lib/text.js","webpack:///./node_modules/rot-js/lib/constants.js","webpack:///./node_modules/rot-js/lib/display/display.js","webpack:///./node_modules/rot-js/lib/stringgenerator.js","webpack:///./node_modules/rot-js/lib/eventqueue.js","webpack:///./node_modules/rot-js/lib/scheduler/scheduler.js","webpack:///./node_modules/rot-js/lib/scheduler/index.js","webpack:///./node_modules/rot-js/lib/scheduler/simple.js","webpack:///./node_modules/rot-js/lib/scheduler/speed.js","webpack:///./node_modules/rot-js/lib/scheduler/action.js","webpack:///./node_modules/rot-js/lib/fov/fov.js","webpack:///./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack:///./node_modules/rot-js/lib/fov/index.js","webpack:///./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack:///./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack:///./node_modules/rot-js/lib/map/map.js","webpack:///./node_modules/rot-js/lib/map/dungeon.js","webpack:///./node_modules/rot-js/lib/map/features.js","webpack:///./node_modules/rot-js/lib/map/digger.js","webpack:///./node_modules/rot-js/lib/map/ellermaze.js","webpack:///./node_modules/rot-js/lib/map/index.js","webpack:///./node_modules/rot-js/lib/map/arena.js","webpack:///./node_modules/rot-js/lib/map/uniform.js","webpack:///./node_modules/rot-js/lib/map/cellular.js","webpack:///./node_modules/rot-js/lib/map/dividedmaze.js","webpack:///./node_modules/rot-js/lib/map/iceymaze.js","webpack:///./node_modules/rot-js/lib/map/rogue.js","webpack:///./node_modules/rot-js/lib/noise/simplex.js","webpack:///./node_modules/rot-js/lib/noise/index.js","webpack:///./node_modules/rot-js/lib/noise/noise.js","webpack:///./node_modules/rot-js/lib/path/path.js","webpack:///./node_modules/rot-js/lib/path/index.js","webpack:///./node_modules/rot-js/lib/path/dijkstra.js","webpack:///./node_modules/rot-js/lib/path/astar.js","webpack:///./node_modules/rot-js/lib/engine.js","webpack:///./node_modules/rot-js/lib/lighting.js","webpack:///./node_modules/rot-js/lib/index.js","webpack:///./node_modules/rot-js/lib/display/term.js","webpack:///./src/display.ts","webpack:///./src/ecs/systems/index.ts","webpack:///./node_modules/process/browser.js","webpack:///./src/player.ts","webpack:///./node_modules/keymage/keymage.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///./node_modules/immer/dist/immer.esm.js","webpack:///./src/utils/tileMap.ts","webpack:///./src/ecs/systems/rendering.ts","webpack:///./src/ecs/components/renderable.ts","webpack:///./src/ecs/components/position.ts","webpack:///./src/setters.ts","webpack:///./src/ecs/entities/index.ts","webpack:///./src/ecs/entities/player.ts","webpack:///./src/assets/VGA8x16.png"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FRAC","RNG","this","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","Math","min","floor","getUniform","mean","stddev","u","v","sqrt","log","array","length","result","clone","slice","index","indexOf","getItem","push","splice","data","total","id","random","part","state","setState","getState","mod","x","clamp","val","capitalize","string","charAt","toUpperCase","substring","format","template","args","map","replace","match","group1","group2","obj","parts","split","shift","method","toLowerCase","replaced","apply","first","fromString","str","cached","CACHE","values","parseInt","add","color1","colors","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","color","diff","Array","getNormal","g","b","h","hue2rgb","q","toRGB","join","toHex","toString","padStart","Backend","options","_options","WIDTH","HEIGHT","display","setupDisplay","width","height","ECS","World","createMap","game","runState","RunState","PRERUN","eval","main","randomCenter","ROT","centers","playerID","createPlayer","registerSystem","RenderingSystem","getSystem","stop","setRunState","gameLoop","document","addEventListener","querySelector","remove","SystemManager","world","_systems","_executeSystems","lastExecutedSystem","System","attributes","undefined","find","constructor","console","warn","system","init","order","execute","sortSystems","sort","a","priority","delta","time","initialized","canExecute","startTime","performance","now","executeTime","clearEvents","forEach","forcePlay","enabled","executeSystem","stats","numSystems","systems","systemStats","queries","ctx","EventDispatcher","_listeners","fired","handled","eventName","listener","listeners","listenerArray","entity","component","getName","Component","componentPropertyName","queryKey","Components","names","T","operator","Query","manager","NotComponents","Error","entities","eventDispatcher","reactive","_entities","dispatchEvent","ENTITY_ADDED","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","components","included","C","not","numEntities","numComponents","COMPONENT_CHANGED","nextId","Entity","_world","_ComponentTypes","_components","_componentsToRemove","_ComponentTypesToRemove","alive","includeRemoved","query","entityAddComponent","forceRemove","entityRemoveComponent","hasRemovedComponent","hasComponent","entityRemoveAllComponents","removeEntity","ObjectPool","initialSize","freeList","count","isObjectPool","extraArgs","arguments","createElement","expand","pop","item","reset","QueryManager","_queries","queryName","addEntity","SystemStateComponent","isSystemStateComponent","EntityManager","componentsManager","_entitiesByNames","_queryManager","_entityPool","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","numStateComponents","aquire","ENTITY_CREATED","__proto__","getComponentsPool","copy","onEntityComponentAdded","componentAddedToEntity","COMPONENT_ADDED","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","componentName","onEntityComponentRemoved","propName","_componentPool","release","componentRemovedFromEntity","onEntityRemoved","_releaseEntity","getQuery","numQueries","keys","numComponentPool","componentPool","cname","pool","used","totalUsed","size","DummyObjectPool","isDummyObjectPool","Infinity","ComponentManager","registerComponent","version","description","types","scripts","build","docs","dev","lint","start","test","travis","repository","type","url","keywords","author","license","bugs","ava","files","sources","require","jspm","directories","homepage","devDependencies","concurrently","eslint","nodemon","prettier","rollup","typedoc","typescript","pjson","Version","entityManager","systemManager","eventQueues","CustomEvent","event","detail","window","lastTime","SystemClass","getSystems","processDeferredRemoval","createEntity","JSON","stringify","_mandatoryQueries","queryConfig","queryComponents","mandatory","results","eventMapping","added","removed","changed","listen","eventList","isArray","changedComponent","json","queryDefinition","jsonQuery","Not","isComponent","TagComponent","createType","typeDefinition","undefinedFunctions","filter","f","isType","isTagComponent","Types","Number","baseType","isSimpleType","defaultValue","src","clear","Boolean","String","dst","standardTypes","number","boolean","inferType","createComponentClass","schema","default","attr","knownTypes","generateId","characters","charactersLength","injectScript","onLoad","script","onload","head","documentElement","appendChild","hookConsoleAndErrors","connection","fn","send","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","body","enableRemoteDevtools","generateNewCode","localStorage","setItem","location","reload","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","worldsBeforeLoading","onWorldCreated","e","onLoaded","peer","Peer","on","setAttribute","parentNode","removeChild","removeEventListener","returnEval","urlParams","URLSearchParams","search","has","initialState","ecs","tick","MAINMENU","drawMap","drawGUI","AWAITINGINPUT","PLAYERTURN","MONSTERTURN","SHOWINVENTORY","SHOWDROPITEM","SHOWTARGETING","SAVEGAME","RUNNING","PAUSED","requestAnimationFrame","setter","createSetter","CellType","xyIdx","y","isBlocked","idx","WALL","overlaps","rect1","rect2","rect1x","rect1y","rect1w","rect1h","rect2x","rect2y","rect2w","rect2h","getCenter","rect","w","drawHorizontalLine","x1","x2","FLOOR","_x","drawVerticalLine","y1","y2","_y","fill","rooms","nRooms","getUniformInt","room","ok","other","fillSquare","center","c1","c2","turns","turn","Renderable","Position","super","_ctx","getContext","cb","canvas","opts","setOptions","font","fontStyle","fontSize","fontFamily","_updateSize","textAlign","textBaseline","fillStyle","bg","fillRect","getBoundingClientRect","left","top","_normalizedEventToPosition","_spacingX","_spacingY","_hexSize","clearBefore","ch","fg","px","transpose","reverse","_fill","chars","concat","fillText","ceil","availWidth","availHeight","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","spacing","nodeSize","cx","cy","border","beginPath","moveTo","lineTo","charWidth","xprop","yprop","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","forceSquareRatio","_colorCanvas","tileWidth","tileHeight","tileColorize","clearRect","fgs","bgs","tile","tileMap","context","globalCompositeOperation","tileSet","preserveDrawingBuffer","_uniforms","_gl","_initWebGL","alert","complete","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","trim","colorCache","parsed","$","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","maxWidth","tokens","tokenize","lineWidth","token","offset","lineLength","lastTokenWithSpace","breakInsideToken","arr","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","BACKENDS","DEFAULT_OPTIONS","layout","_data","_dirty","assign","DEBUG","_tick","_backend","schedule","what","draw","ctor","getContainer","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","text","lines","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","_draw","Rect","Hex","Tile","TileGL","Term","words","prior","_boundary","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","getWeightedValue","EventQueue","_time","_events","_eventTimes","_remove","_queue","_repeat","_current","getTime","repeat","getEventTime","Simple","next","Speed","getSpeed","Action","_defaultDuration","_duration","lightPassesCallback","_lightPasses","topology","dirs","countFactor","startOffset","OCTANTS","DiscreteShadowcasting","R","callback","A","B","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","v2","PreciseShadowcasting","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","index2","edge2","visibleLength","visible","P","P1","P2","RecursiveShadowcasting","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","dx","dy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","_width","_height","_rooms","_corridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","addDoor","roomWidth","roomHeight","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","sx","sy","abs","nx","ny","firstCornerBad","secondCornerBad","priorityWallCallback","FEATURES","addToList","L","removeFromList","Arena","Uniform","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","Date","_fillMap","_generateRooms","_generateCorridors","_generateRoom","createRandom","isValid","cnt","clearDoors","shuffle","connected","room1","_closestRoom","room2","_connectRooms","dist","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","dirIndex","avail","lastBadIndex","points","corridor","Cellular","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","keepNotConnected","tests","pkey","stepWidth","Digger","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","createRandomCenter","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","EllerMaze","DividedMaze","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","IceyMaze","regularity","_regularity","done","_randomize","_isFree","Rogue","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","directions","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","move","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","otherWall","_drawCorridor","_getWallPosition","F2","G2","Simplex","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","toX","toY","passableCallback","_toX","_toY","_passableCallback","Dijkstra","_computed","_todo","_add","fromX","fromY","_compute","prev","neighbor","AStar","_done","_fromX","_fromY","_distance","itemF","Engine","scheduler","_scheduler","_lock","unlock","actor","lock","act","then","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","compute","vis","Util","util","Color","Text","termcolor","rgb","_offset","_cursor","_lastColor","setTimeout","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","W","H","Display","isSupported","glyph","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","tryMove","player","N","E","S","position","getComponent","destinationIdx","isOsx","navigator","userAgent","MODPROPS","MODS","MODORDER","MODNUMS","KEYREV","currentScope","allChains","parseKeyString","keystring","bits","button","code","stringifyKey","getNestedChains","chains","scope","bit","sequence","getHandlers","keychain","_keymage","preventDefault","handlers","assignKey","unassignKey","keymage","normalized","keychainString","original","normalizeKeyChain","unbind","parse","bindings","setScope","getScope","pushScope","popScope","RegExp","keyCode","seq","eventKeyString","matched","definitionScope","handler","shortcut","getPrototypeOf","Map","U","Set","getOwnPropertyDescriptor","writable","configurable","isFrozen","set","delete","freeze","Q","J","_","O","M","X","I","D","Reflect","z","F","V","Y","Proxy","revocable","revoke","proxy","K","entries","path","op","unshift","setPrototypeOf","G","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","deleteProperty","Z","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","produceWithPatches","Promise","createDraft","finishDraft","applyPatches","nn","tn","rn","en","un","an","'","renderables","renderable","addComponent"],"mappings":"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G,EAAIC,GACjB,IAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,KAAM,CAAC,GAAKD,EAAG,EAAIC,GACnB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,EAAID,EAAG,EAAIC,GACjB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,IAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,GAAKD,EAAG,EAAIC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,EAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,EAAID,EAAG,GAAKC,GAClB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAAKD,EAAG,GAAKC,GACnB,IAAK,CAAC,GAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import * as ROT from 'rot-js';\nimport setupKeys from './player';\nimport GameState, { RunState } from './state';\nimport { setRunState } from './setters';\nimport { setupDisplay } from './display';\nimport { createMap } from './map';\nimport { World } from 'ecsy';\nimport { RenderingSystem } from './ecs/systems';\nimport { createPlayer } from './ecs/entities';\n\nimport './assets/VGA8x16.png';\n\nconst WIDTH = 64;\nconst HEIGHT = 32;\n\nconst display = setupDisplay({\n  width: WIDTH,\n  height: HEIGHT\n});\n\nconst ECS = new World();\nconst map = createMap(WIDTH, HEIGHT);\nconst game = new GameState({\n  runState: RunState.PRERUN,\n  map: map.map,\n}, display, ECS);\n\neval('window.game = game;');\n\nconst main = (): void => {\n  const randomCenter = ROT.RNG.getItem(map.centers);\n\n  game.playerID = createPlayer(ECS, randomCenter[0], randomCenter[1]);\n\n  setupKeys(game);\n\n  ECS.registerSystem(RenderingSystem);\n  const rendering = ECS.getSystem(RenderingSystem);\n  rendering.stop();\n\n  game\n    .setState(setRunState(RunState.PRERUN));\n\n  game.gameLoop();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.querySelector('.main .loading').remove();\n  main();\n});\n\nexport { game, ECS, display, WIDTH, HEIGHT };\n","class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(System, attributes) {\n    if (\n      this._systems.find(s => s.constructor.name === System.name) !== undefined\n    ) {\n      console.warn(`System '${System.name}' already registered.`);\n      return this;\n    }\n\n    var system = new System(this.world, attributes);\n    if (system.init) system.init();\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(System) {\n    return this._systems.find(s => s instanceof System);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(System) {\n    var index = this._systems.indexOf(System);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = performance.now();\n        system.execute(delta, time);\n        system.executeTime = performance.now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach(system => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      system =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {}\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.constructor.name] = {\n        queries: {}\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n\n/**\n * @private\n * @class EventDispatcher\n */\nclass EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n\n/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nfunction getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nfunction componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nfunction queryKey(Components) {\n  var names = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      names.push(operator + getName(T.Component));\n    } else {\n      names.push(getName(T));\n    }\n  }\n\n  return names.sort().join(\"-\");\n}\n\nclass Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach(component => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map(C => C.name),\n        not: this.NotComponents.map(C => C.name)\n      },\n      numEntities: this.entities.length\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n\nvar nextId = 0;\n\nclass Entity {\n  constructor(world) {\n    this._world = world || null;\n\n    // Unique ID for this entity\n    this.id = nextId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component.name];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component.name];\n    }\n\n    return  component;\n  }\n\n  getRemovedComponent(Component) {\n    return this._componentsToRemove[Component.name];\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component.name];\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._world.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceRemove) {\n    this._world.entityRemoveComponent(this, Component, forceRemove);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceRemove) {\n    return this._world.entityRemoveAllComponents(this, forceRemove);\n  }\n\n  // EXTRAS\n\n  // Initialize the entity. To be used when returning an entity to the pool\n  reset() {\n    this.id = nextId++;\n    this._world = null;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n    this._components = {};\n  }\n\n  remove(forceRemove) {\n    return this._world.removeEntity(this, forceRemove);\n  }\n}\n\nclass ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    var extraArgs = null;\n    if (arguments.length > 1) {\n      extraArgs = Array.prototype.slice.call(arguments);\n      extraArgs.shift();\n    }\n\n    this.createElement = extraArgs\n      ? () => {\n          return new T(...extraArgs);\n        }\n      : () => {\n          return new T();\n        };\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  aquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      this.freeList.push(this.createElement());\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n\n/**\n * @private\n * @class QueryManager\n */\nclass QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n\nclass SystemStateComponent {}\n\nSystemStateComponent.isSystemStateComponent = true;\n\n/**\n * @private\n * @class EntityManager\n */\nclass EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new ObjectPool(Entity);\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n\n    this.numStateComponents = 0;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.aquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    entity._world = this;\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    if (~entity._ComponentTypes.indexOf(Component)) return;\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      this.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n    var component = componentPool.aquire();\n\n    entity._components[Component.name] = component;\n\n    if (values) {\n      if (component.copy) {\n        component.copy(values);\n      } else {\n        for (var name in values) {\n          component[name] = values[name];\n        }\n      }\n    }\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      var componentName = getName(Component);\n      entity._componentsToRemove[componentName] =\n        entity._components[componentName];\n      delete entity._components[componentName];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      this.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (this.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var propName = componentPropertyName(Component);\n    var componentName = getName(Component);\n    var component = entity._components[componentName];\n    delete entity._components[componentName];\n    this.componentsManager._componentPool[propName].release(component);\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n\n    if (this.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n\n    this.entityRemoveAllComponents(entity, immediately);\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    // Prevent any access and free\n    entity._world = null;\n    this._entityPool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var propName = componentPropertyName(Component);\n        var componentName = getName(Component);\n        var component = entity._componentsToRemove[componentName];\n        delete entity._componentsToRemove[componentName];\n        this.componentsManager._componentPool[propName].release(component);\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats\n    };\n\n    for (var cname in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[cname];\n      stats.componentPool[cname] = {\n        used: pool.totalUsed(),\n        size: pool.count\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n\nclass DummyObjectPool {\n  constructor(T) {\n    this.isDummyObjectPool = true;\n    this.count = 0;\n    this.used = 0;\n    this.T = T;\n  }\n\n  aquire() {\n    this.used++;\n    this.count++;\n    return new this.T();\n  }\n\n  release() {\n    this.used--;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return Infinity;\n  }\n\n  totalUsed() {\n    return this.used;\n  }\n}\n\nclass ComponentManager {\n  constructor() {\n    this.Components = {};\n    this._componentPool = {};\n    this.numComponents = {};\n  }\n\n  registerComponent(Component) {\n    if (this.Components[Component.name]) {\n      console.warn(`Component type: '${Component.name}' already registered.`);\n      return;\n    }\n\n    this.Components[Component.name] = Component;\n    this.numComponents[Component.name] = 0;\n  }\n\n  componentAddedToEntity(Component) {\n    if (!this.Components[Component.name]) {\n      this.registerComponent(Component);\n    }\n\n    this.numComponents[Component.name]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component.name]--;\n  }\n\n  getComponentsPool(Component) {\n    var componentName = componentPropertyName(Component);\n\n    if (!this._componentPool[componentName]) {\n      if (Component.prototype.reset) {\n        this._componentPool[componentName] = new ObjectPool(Component);\n      } else {\n        console.warn(\n          `Component '${Component.name}' won't benefit from pooling because 'reset' method was not implemented.`\n        );\n        this._componentPool[componentName] = new DummyObjectPool(Component);\n      }\n    }\n\n    return this._componentPool[componentName];\n  }\n}\n\nvar name = \"ecsy\";\nvar version = \"0.2.2\";\nvar description = \"Entity Component System in JS\";\nvar main = \"build/ecsy.js\";\nvar module = \"build/ecsy.module.js\";\nvar types = \"src/index.d.ts\";\nvar scripts = {\n\tbuild: \"rollup -c && npm run docs\",\n\tdocs: \"rm docs/api/_sidebar.md; typedoc --readme none --mode file --excludeExternals --plugin typedoc-plugin-markdown  --theme docs/theme --hideSources --hideBreadcrumbs --out docs/api/ --includeDeclarations --includes 'src/**/*.d.ts' src; touch docs/api/_sidebar.md\",\n\t\"dev:docs\": \"nodemon -e ts -x 'npm run docs' -w src\",\n\tdev: \"concurrently --names 'ROLLUP,DOCS,HTTP' -c 'bgBlue.bold,bgYellow.bold,bgGreen.bold' 'rollup -c -w -m inline' 'npm run dev:docs' 'npm run dev:server'\",\n\t\"dev:server\": \"http-server -c-1 -p 8080 --cors\",\n\tlint: \"eslint src test examples\",\n\tstart: \"npm run dev\",\n\ttest: \"ava\",\n\ttravis: \"npm run lint && npm run test && npm run build\",\n\t\"watch:test\": \"ava --watch\"\n};\nvar repository = {\n\ttype: \"git\",\n\turl: \"git+https://github.com/fernandojsg/ecsy.git\"\n};\nvar keywords = [\n\t\"ecs\",\n\t\"entity component system\"\n];\nvar author = \"Fernando Serrano <fernandojsg@gmail.com> (http://fernandojsg.com)\";\nvar license = \"MIT\";\nvar bugs = {\n\turl: \"https://github.com/fernandojsg/ecsy/issues\"\n};\nvar ava = {\n\tfiles: [\n\t\t\"test/**/*.test.js\"\n\t],\n\tsources: [\n\t\t\"src/**/*.js\"\n\t],\n\trequire: [\n\t\t\"babel-register\",\n\t\t\"esm\"\n\t]\n};\nvar jspm = {\n\tfiles: [\n\t\t\"package.json\",\n\t\t\"LICENSE\",\n\t\t\"README.md\",\n\t\t\"build/ecsy.js\",\n\t\t\"build/ecsy.min.js\",\n\t\t\"build/ecsy.module.js\"\n\t],\n\tdirectories: {\n\t}\n};\nvar homepage = \"https://github.com/fernandojsg/ecsy#readme\";\nvar devDependencies = {\n\tava: \"^1.4.1\",\n\t\"babel-cli\": \"^6.26.0\",\n\t\"babel-core\": \"^6.26.3\",\n\t\"babel-eslint\": \"^10.0.3\",\n\t\"babel-loader\": \"^8.0.6\",\n\tconcurrently: \"^4.1.2\",\n\t\"docsify-cli\": \"^4.4.0\",\n\teslint: \"^5.16.0\",\n\t\"eslint-config-prettier\": \"^4.3.0\",\n\t\"eslint-plugin-prettier\": \"^3.1.2\",\n\t\"http-server\": \"^0.11.1\",\n\tnodemon: \"^1.19.4\",\n\tprettier: \"^1.19.1\",\n\trollup: \"^1.29.0\",\n\t\"rollup-plugin-json\": \"^4.0.0\",\n\t\"rollup-plugin-terser\": \"^5.2.0\",\n\ttypedoc: \"^0.15.8\",\n\t\"typedoc-plugin-markdown\": \"^2.2.16\",\n\ttypescript: \"^3.7.5\"\n};\nvar pjson = {\n\tname: name,\n\tversion: version,\n\tdescription: description,\n\tmain: main,\n\t\"jsnext:main\": \"build/ecsy.module.js\",\n\tmodule: module,\n\ttypes: types,\n\tscripts: scripts,\n\trepository: repository,\n\tkeywords: keywords,\n\tauthor: author,\n\tlicense: license,\n\tbugs: bugs,\n\tava: ava,\n\tjspm: jspm,\n\thomepage: homepage,\n\tdevDependencies: devDependencies\n};\n\nconst Version = pjson.version;\n\nclass World {\n  constructor() {\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version }\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = performance.now();\n  }\n\n  registerComponent(Component) {\n    this.componentsManager.registerComponent(Component);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      let time = performance.now();\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats()\n    };\n\n    console.log(JSON.stringify(stats, null, 2));\n  }\n}\n\nclass System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n        var query = this.world.entityManager.queryComponents(Components);\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach(eventName => {\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    entity => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  entity => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.constructor.name,\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {}\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach(method => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nfunction Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component\n  };\n}\n\nclass Component {}\n\nComponent.isComponent = true;\n\nclass TagComponent {\n  reset() {}\n}\n\nTagComponent.isTagComponent = true;\n\nfunction createType(typeDefinition) {\n  var mandatoryFunctions = [\n    \"create\",\n    \"reset\",\n    \"clear\"\n    /*\"copy\"*/\n  ];\n\n  var undefinedFunctions = mandatoryFunctions.filter(f => {\n    return !typeDefinition[f];\n  });\n\n  if (undefinedFunctions.length > 0) {\n    throw new Error(\n      `createType expect type definition to implements the following functions: ${undefinedFunctions.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nvar Types = {};\n\nTypes.Number = createType({\n  baseType: Number,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : 0;\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = 0;\n    }\n  },\n  clear: (src, key) => {\n    src[key] = 0;\n  }\n});\n\nTypes.Boolean = createType({\n  baseType: Boolean,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : false;\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = false;\n    }\n  },\n  clear: (src, key) => {\n    src[key] = false;\n  }\n});\n\nTypes.String = createType({\n  baseType: String,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : \"\";\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = \"\";\n    }\n  },\n  clear: (src, key) => {\n    src[key] = \"\";\n  }\n});\n\nTypes.Array = createType({\n  baseType: Array,\n  create: defaultValue => {\n    if (typeof defaultValue !== \"undefined\") {\n      return defaultValue.slice();\n    }\n\n    return [];\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue.slice();\n    } else {\n      src[key].length = 0;\n    }\n  },\n  clear: (src, key) => {\n    src[key].length = 0;\n  },\n  copy: (src, dst, key) => {\n    src[key] = dst[key].slice();\n  }\n});\n\nvar standardTypes = {\n  number: Types.Number,\n  boolean: Types.Boolean,\n  string: Types.String\n};\n\n/**\n * Try to infer the type of the value\n * @param {*} value\n * @return {String} Type of the attribute\n * @private\n */\nfunction inferType(value) {\n  if (Array.isArray(value)) {\n    return Types.Array;\n  }\n\n  if (standardTypes[typeof value]) {\n    return standardTypes[typeof value];\n  } else {\n    return null;\n  }\n}\n\nfunction createComponentClass(schema, name) {\n  //var Component = new Function(`return function ${name}() {}`)();\n  for (let key in schema) {\n    let type = schema[key].type;\n    if (!type) {\n      schema[key].type = inferType(schema[key].default);\n    }\n  }\n\n  var Component = function() {\n    for (let key in schema) {\n      var attr = schema[key];\n      let type = attr.type;\n      if (type && type.isType) {\n        this[key] = type.create(attr.default);\n      } else {\n        this[key] = attr.default;\n      }\n    }\n  };\n\n  if (typeof name !== \"undefined\") {\n    Object.defineProperty(Component, \"name\", { value: name });\n  }\n\n  Component.prototype.schema = schema;\n\n  var knownTypes = true;\n  for (let key in schema) {\n    var attr = schema[key];\n    if (!attr.type) {\n      attr.type = inferType(attr.default);\n    }\n\n    var type = attr.type;\n    if (!type) {\n      console.warn(`Unknown type definition for attribute '${key}'`);\n      knownTypes = false;\n    }\n  }\n\n  if (!knownTypes) {\n    console.warn(\n      `This component can't use pooling because some data types are not registered. Please provide a type created with 'createType'`\n    );\n\n    for (var key in schema) {\n      let attr = schema[key];\n      Component.prototype[key] = attr.default;\n    }\n  } else {\n    Component.prototype.copy = function(src) {\n      for (let key in schema) {\n        if (src[key]) {\n          let type = schema[key].type;\n          if (type.isSimpleType) {\n            this[key] = src[key];\n          } else if (type.copy) {\n            type.copy(this, src, key);\n          } else {\n            // @todo Detect that it's not possible to copy all the attributes\n            // and just avoid creating the copy function\n            console.warn(\n              `Unknown copy function for attribute '${key}' data type`\n            );\n          }\n        }\n      }\n    };\n\n    Component.prototype.reset = function() {\n      for (let key in schema) {\n        let attr = schema[key];\n        let type = attr.type;\n        if (type.reset) type.reset(this, key, attr.default);\n      }\n    };\n\n    Component.prototype.clear = function() {\n      for (let key in schema) {\n        let type = schema[key].type;\n        if (type.clear) type.clear(this, key);\n      }\n    };\n\n    for (let key in schema) {\n      let attr = schema[key];\n      let type = attr.type;\n      Component.prototype[key] = attr.default;\n\n      if (type.reset) {\n        type.reset(Component.prototype, key, attr.default);\n      }\n    }\n  }\n\n  return Component;\n}\n\nfunction generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n\n/* global Peer */\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach(key => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args)\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", error => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack\n      })\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nfunction enableRemoteDevtools(remoteId) {\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = e => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    var peer = new Peer(remoteId);\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", connection => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function() {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function(data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach(world => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version }\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nconst urlParams = new URLSearchParams(window.location.search);\n\n// @todo Provide a way to disable it if needed\nif (urlParams.has(\"enable-remote-devtools\")) {\n  enableRemoteDevtools();\n}\n\nexport { Component, Not, System, SystemStateComponent, TagComponent, Types, Version, World, createComponentClass, createType, enableRemoteDevtools };\n","import produce from 'immer';\nimport * as ROT from 'rot-js';\nimport { World } from 'ecsy';\nimport throttle from 'lodash/throttle';\nimport { WIDTH, HEIGHT } from '.';\nimport { CellType } from './map';\nimport { drawMap, drawGUI } from './display';\nimport { RenderingSystem } from './ecs/systems';\n\nconst ENABLE_LOGGING = false;\n\nexport enum RunState {\n  PRERUN = 'PRERUN',\n  RUNNING = 'RUNNING',\n  PAUSED = 'PAUSED',\n  AWAITINGINPUT = 'AWAITINGINPUT',\n  PLAYERTURN = 'PLAYERTURN',\n  MONSTERTURN = 'MONSTERTURN',\n  SHOWINVENTORY = 'SHOWINVENTORY',\n  SHOWDROPITEM = 'SHOWDROPITEM',\n  SHOWTARGETING = 'SHOWTARGETING',\n  MAINMENU = 'MAINMENU',\n  SAVEGAME = 'SAVEGAME'\n}\n\nexport type State = {\n  runState: RunState;\n  map: CellType[];\n}\n\ntype StateGetter = (state: State) => any;\ntype StateSetter = (state: State) => void;\n\nclass GameState {\n  state: State;\n  display: ROT.Display;\n  ecs: World;\n  lastTime: number;\n  playerID?: number;\n\n  constructor(initialState: State, display: ROT.Display, ecs: World) {\n    this.state = initialState;\n    this.display = display;\n    this.ecs = ecs;\n    this.lastTime = performance.now();\n  }\n\n  getState(getter?: StateGetter): any {\n    if (getter) {\n      return getter(this.state);\n    }\n\n    return this.state;\n  }\n\n  setState(setter: StateSetter): GameState {\n    this.state = produce(this.state, setter);\n\n    return this;\n  }\n\n  tick = (): void => {\n    const time = performance.now();\n    const delta = time - this.lastTime;\n    this.lastTime = time;\n\n    const runState = this.getState(state => state.runState);\n    if (runState !== RunState.MAINMENU) {\n      this.display.clear();\n      drawMap(this.getState(state => state.map));\n\n      this.ecs.getSystem(RenderingSystem).execute(delta, time);\n\n      drawGUI();\n    }\n\n    if (runState === RunState.PRERUN) {\n      this.ecs.execute(delta, time);\n      this.setState(state => {state.runState = RunState.AWAITINGINPUT});\n    } else if (runState === RunState.AWAITINGINPUT) {\n      // poll for input\n    } else if (runState === RunState.PLAYERTURN) {\n      this.ecs.execute(delta, time);\n      this.setState(state => state.runState = RunState.MONSTERTURN);\n    } else if (runState === RunState.MONSTERTURN) {\n      this.ecs.execute(delta, time);\n      this.setState(state => state.runState = RunState.AWAITINGINPUT);\n    } else if (runState === RunState.SHOWINVENTORY) {\n      // const result = showInventory();\n      // if (result === ItemMenuResult.CANCEL) {\n      //   this.setState(state => state.runState = RunState.AWAITINGINPUT);\n      // } else if (result === ItemMenuResult.NORESPONSE) {\n\n      // } else if (result === ItemMenuResult.SELECTED) {\n\n      // }\n    } else if (runState === RunState.SHOWDROPITEM) {\n    } else if (runState === RunState.SHOWTARGETING) {\n    } else if (runState === RunState.MAINMENU) {\n    } else if (runState === RunState.SAVEGAME) {\n    } else if (runState === RunState.RUNNING) {\n    } else if (runState === RunState.PAUSED) {\n    }\n  }\n\n  gameLoop = () => {\n    this.tick();\n\n    requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default GameState;\n\nexport const createSetter = (name: string, fn) => {\n  return (...args): StateSetter => (state): void => {\n    let before, after;\n    if (ENABLE_LOGGING) {\n      before = JSON.parse(JSON.stringify(state));\n    }\n\n    const newState = fn(...args)(state);\n\n    if (ENABLE_LOGGING) {\n      after = JSON.parse(JSON.stringify(state));\n      console.log('Action:', name, ...args, { before, after });\n    }\n    \n    return newState;    \n  };\n};\n","import * as ROT from 'rot-js';\nimport { WIDTH, HEIGHT } from '.';\n\nexport enum CellType {\n  FLOOR,\n  WALL\n}\n\nexport type Map = CellType[];\n\nexport const xyIdx = (x: number, y: number): number => y * WIDTH + x;\n\nexport const isBlocked = (map, idx) => {\n  return map[idx] && map[idx] === CellType.WALL;\n};\n\nconst fillSquare = (map, x, y, w, h, type) => {\n  for (let _x = x; _x < x + w; _x++) {\n    for (let _y = y; _y < y + h; _y++) {\n      const idx = xyIdx(_x, _y);\n      map[idx] = type;\n    }\n  }\n}\n\nconst overlaps = (rect1, rect2) => {\n  const [rect1x, rect1y, rect1w, rect1h] = rect1;\n  const [rect2x, rect2y, rect2w, rect2h] = rect2;\n\n  return rect1x <= rect2x + rect2w && rect1x + rect1w >= rect2x && rect1y <= rect2y + rect2h && rect1y + rect1h >= rect2y;\n}\n\nconst getCenter = (rect) => {\n  const [x, y, w, h] = rect;\n\n  return [~~((x + x + w)/2), ~~((y + y + h)/2)];\n}\n\nconst drawHorizontalLine = (map, x1, x2, y, type = CellType.FLOOR) => {\n  for (let _x = Math.min(x1, x2); _x <= Math.max(x1, x2); _x++) {\n    const idx = xyIdx(_x, y);\n    map[idx] = type;\n  }\n}\n\nconst drawVerticalLine = (map, y1, y2, x, type = CellType.FLOOR) => {\n  for (let _y = Math.min(y1, y2); _y <= Math.max(y1, y2); _y++) {\n    const idx = xyIdx(x, _y);\n    map[idx] = type;\n  }\n}\n\nexport const createMap = (w: number, h: number): {\n  map: Map;\n  rooms: number[][];\n  centers: number[][];\n} => {\n  const map = (new Array(w * h)).fill(CellType.WALL);\n\n  for (let y = 1; y < HEIGHT - 1; y++) {\n    for (let x = 1; x < WIDTH - 1; x++) {\n      map[xyIdx(x, y)] = CellType.WALL;\n    }\n  }\n\n  const MIN_SIZE = 6;\n  const MAX_SIZE = 10;\n  // create random rooms\n  let rooms = [];\n  const nRooms = ROT.RNG.getUniformInt(3, 7);\n  while(rooms.length < nRooms) {\n    const width = ROT.RNG.getUniformInt(MIN_SIZE, MAX_SIZE);\n    const height = ROT.RNG.getUniformInt(MIN_SIZE, MAX_SIZE);\n    const x = ROT.RNG.getUniformInt(1, WIDTH - 1 - MAX_SIZE);\n    const y = ROT.RNG.getUniformInt(1, HEIGHT - 1 - MAX_SIZE);\n    const room = [x, y, width, height];\n    if (rooms.length === 0) {\n      rooms.push(room)\n    } else {\n      let ok = true;\n      rooms.forEach(other => {\n        if (overlaps(room, other)) { ok = false; }\n      });\n      if (ok) {\n        rooms.push(room);\n      }\n    }\n  }\n\n  rooms.forEach(([x, y, width, height]) => fillSquare(map, x, y, width, height, CellType.FLOOR));\n\n  const centers = rooms.map(getCenter);\n  centers.forEach((center, idx) => {\n    if (idx === centers.length - 1) { return; }\n    const c1 = center;\n    const c2 = centers[idx + 1];\n    const turns = [[c1[0], c2[1]], [c2[0], c1[1]]];\n    const turn = ROT.RNG.getItem(turns);\n\n    if (c1[0] === turn[0]) {\n      drawVerticalLine(map, c1[1], turn[1], turn[0]);\n      drawHorizontalLine(map, c2[0], turn[0], turn[1]);\n    } else {\n      drawHorizontalLine(map, c1[0], turn[0], turn[1]);\n      drawVerticalLine(map, c2[1], turn[1], turn[0]);\n    }\n  })\n\n  return {map, rooms, centers};\n};\n\n","import Renderable from './renderable';\nimport Position from './position';\n\nexport {\n  Renderable,\n  Position\n};","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nexport default class Rect extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._canvasCache = {};\n    }\n    setOptions(options) {\n        super.setOptions(options);\n        this._canvasCache = {};\n    }\n    draw(data, clearBefore) {\n        if (Rect.cache) {\n            this._drawWithCache(data);\n        }\n        else {\n            this._drawNoCache(data, clearBefore);\n        }\n    }\n    _drawWithCache(data) {\n        let [x, y, ch, fg, bg] = data;\n        let hash = \"\" + ch + fg + bg;\n        let canvas;\n        if (hash in this._canvasCache) {\n            canvas = this._canvasCache[hash];\n        }\n        else {\n            let b = this._options.border;\n            canvas = document.createElement(\"canvas\");\n            let ctx = canvas.getContext(\"2d\");\n            canvas.width = this._spacingX;\n            canvas.height = this._spacingY;\n            ctx.fillStyle = bg;\n            ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n            if (ch) {\n                ctx.fillStyle = fg;\n                ctx.font = this._ctx.font;\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                let chars = [].concat(ch);\n                for (let i = 0; i < chars.length; i++) {\n                    ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                }\n            }\n            this._canvasCache[hash] = canvas;\n        }\n        this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n    }\n    _drawNoCache(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        if (clearBefore) {\n            let b = this._options.border;\n            this._ctx.fillStyle = bg;\n            this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._spacingX);\n        let height = Math.floor(availHeight / this._spacingY);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        let boxWidth = Math.floor(availWidth / this._options.width);\n        let boxHeight = Math.floor(availHeight / this._options.height);\n        /* compute char ratio */\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        let widthFraction = ratio * boxHeight / boxWidth;\n        if (widthFraction > 1) { /* too wide with current aspect ratio */\n            boxHeight = Math.floor(boxHeight / widthFraction);\n        }\n        return Math.floor(boxHeight / this._options.spacing);\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._spacingX = Math.ceil(opts.spacing * charWidth);\n        this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n        if (opts.forceSquareRatio) {\n            this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n        }\n        this._ctx.canvas.width = opts.width * this._spacingX;\n        this._ctx.canvas.height = opts.height * this._spacingY;\n    }\n}\nRect.cache = false;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n                    \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nexport default class Display {\n    constructor(options = {}) {\n        this._data = {};\n        this._dirty = false; // false = nothing, true = all, object = dirty cells\n        this._options = {};\n        options = Object.assign({}, DEFAULT_OPTIONS, options);\n        this.setOptions(options);\n        this.DEBUG = this.DEBUG.bind(this);\n        this._tick = this._tick.bind(this);\n        this._backend.schedule(this._tick);\n    }\n    /**\n     * Debug helper, ideal as a map generator callback. Always bound to this.\n     * @param {int} x\n     * @param {int} y\n     * @param {int} what\n     */\n    DEBUG(x, y, what) {\n        let colors = [this._options.bg, this._options.fg];\n        this.draw(x, y, null, null, colors[what % colors.length]);\n    }\n    /**\n     * Clear the whole display (cover it with background color)\n     */\n    clear() {\n        this._data = {};\n        this._dirty = true;\n    }\n    /**\n     * @see ROT.Display\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n            if (options.layout) {\n                let ctor = BACKENDS[options.layout];\n                this._backend = new ctor();\n            }\n            this._backend.setOptions(this._options);\n            this._dirty = true;\n        }\n        return this;\n    }\n    /**\n     * Returns currently set options\n     */\n    getOptions() { return this._options; }\n    /**\n     * Returns the DOM node of this display\n     */\n    getContainer() { return this._backend.getContainer(); }\n    /**\n     * Compute the maximum width/height to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int[2]} cellWidth,cellHeight\n     */\n    computeSize(availWidth, availHeight) {\n        return this._backend.computeSize(availWidth, availHeight);\n    }\n    /**\n     * Compute the maximum font size to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int} fontSize\n     */\n    computeFontSize(availWidth, availHeight) {\n        return this._backend.computeFontSize(availWidth, availHeight);\n    }\n    computeTileSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.width);\n        let height = Math.floor(availHeight / this._options.height);\n        return [width, height];\n    }\n    /**\n     * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n     * @param {Event} e event\n     * @returns {int[2]} -1 for values outside of the canvas\n     */\n    eventToPosition(e) {\n        let x, y;\n        if (\"touches\" in e) {\n            x = e.touches[0].clientX;\n            y = e.touches[0].clientY;\n        }\n        else {\n            x = e.clientX;\n            y = e.clientY;\n        }\n        return this._backend.eventToPosition(x, y);\n    }\n    /**\n     * @param {int} x\n     * @param {int} y\n     * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n     * @param {string} [fg] foreground color\n     * @param {string} [bg] background color\n     */\n    draw(x, y, ch, fg, bg) {\n        if (!fg) {\n            fg = this._options.fg;\n        }\n        if (!bg) {\n            bg = this._options.bg;\n        }\n        let key = `${x},${y}`;\n        this._data[key] = [x, y, ch, fg, bg];\n        if (this._dirty === true) {\n            return;\n        } // will already redraw everything \n        if (!this._dirty) {\n            this._dirty = {};\n        } // first!\n        this._dirty[key] = true;\n    }\n    /**\n     * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n     * @param {int} [maxWidth] wrap at what width?\n     * @returns {int} lines drawn\n     */\n    drawText(x, y, text, maxWidth) {\n        let fg = null;\n        let bg = null;\n        let cx = x;\n        let cy = y;\n        let lines = 1;\n        if (!maxWidth) {\n            maxWidth = this._options.width - x;\n        }\n        let tokens = Text.tokenize(text, maxWidth);\n        while (tokens.length) { // interpret tokenized opcode stream\n            let token = tokens.shift();\n            switch (token.type) {\n                case Text.TYPE_TEXT:\n                    let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                    for (let i = 0; i < token.value.length; i++) {\n                        let cc = token.value.charCodeAt(i);\n                        let c = token.value.charAt(i);\n                        // Assign to `true` when the current char is full-width.\n                        isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                        // Current char is space, whatever full-width or half-width both are OK.\n                        isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                        // The previous char is full-width and\n                        // current char is nether half-width nor a space.\n                        if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                            cx++;\n                        } // add an extra position\n                        // The current char is full-width and\n                        // the previous char is not a space.\n                        if (isFullWidth && !isPrevSpace) {\n                            cx++;\n                        } // add an extra position\n                        this.draw(cx++, cy, c, fg, bg);\n                        isPrevSpace = isSpace;\n                        isPrevFullWidth = isFullWidth;\n                    }\n                    break;\n                case Text.TYPE_FG:\n                    fg = token.value || null;\n                    break;\n                case Text.TYPE_BG:\n                    bg = token.value || null;\n                    break;\n                case Text.TYPE_NEWLINE:\n                    cx = x;\n                    cy++;\n                    lines++;\n                    break;\n            }\n        }\n        return lines;\n    }\n    /**\n     * Timer tick: update dirty parts\n     */\n    _tick() {\n        this._backend.schedule(this._tick);\n        if (!this._dirty) {\n            return;\n        }\n        if (this._dirty === true) { // draw all\n            this._backend.clear();\n            for (let id in this._data) {\n                this._draw(id, false);\n            } // redraw cached data \n        }\n        else { // draw only dirty \n            for (let key in this._dirty) {\n                this._draw(key, true);\n            }\n        }\n        this._dirty = false;\n    }\n    /**\n     * @param {string} key What to draw\n     * @param {bool} clearBefore Is it necessary to clean before?\n     */\n    _draw(key, clearBefore) {\n        let data = this._data[key];\n        if (data[4] != this._options.bg) {\n            clearBefore = true;\n        }\n        this._backend.draw(data, clearBefore);\n    }\n}\nDisplay.Rect = Rect;\nDisplay.Hex = Hex;\nDisplay.Tile = Tile;\nDisplay.TileGL = TileGL;\nDisplay.Term = Term;\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","export default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = [];\n        this._eventTimes = [];\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = [];\n        this._eventTimes = [];\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        let index = this._events.length;\n        for (let i = 0; i < this._eventTimes.length; i++) {\n            if (this._eventTimes[i] > time) {\n                index = i;\n                break;\n            }\n        }\n        this._events.splice(index, 0, event);\n        this._eventTimes.splice(index, 0, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.length) {\n            return null;\n        }\n        let time = this._eventTimes.splice(0, 1)[0];\n        if (time > 0) { /* advance */\n            this._time += time;\n            for (let i = 0; i < this._eventTimes.length; i++) {\n                this._eventTimes[i] -= time;\n            }\n        }\n        return this._events.splice(0, 1)[0];\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return undefined;\n        }\n        return this._eventTimes[index];\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return false;\n        }\n        this._remove(index);\n        return true;\n    }\n    ;\n    /**\n     * Remove an event from the queue\n     * @param {int} index\n     */\n    _remove(index) {\n        this._events.splice(index, 1);\n        this._eventTimes.splice(index, 1);\n    }\n    ;\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        // write the provided symbol to the display\n        let chars = [].concat(ch);\n        process.stdout.write(chars[0]);\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","import * as ROT from 'rot-js';\n\nimport { CellType, Map } from './map';\nimport { display, WIDTH } from '.';\nimport tileMap from './utils/tileMap';\n\nexport const setupDisplay = (options: {width: number; height: number }): ROT.Display => {\n  const tileSet = document.createElement(\"img\");\n  tileSet.src = \"dist/images/VGA8x16.png\";\n\n  const [ W, H ] = [8, 16];\n  const display = new ROT.Display({\n    layout: ROT.Display.TileGL.isSupported() ? 'tile-gl' : 'tile',\n    tileWidth: W,\n    tileHeight: H,\n    tileSet: tileSet,\n    tileMap: tileMap(),\n    width: options.width,\n    height: options.height,\n    tileColorize: true\n  });\n\n  document.querySelector('.main').appendChild(display.getContainer());\n\n  return display;\n};\n\nexport const drawGUI = (): void => {};\n\nexport const drawMap = (map: Map) => {\n  for (let idx = 0; idx < map.length; idx++) {\n    const x = idx % WIDTH;\n    const y = ~~(idx / WIDTH);\n    const glyph = map[idx] === CellType.FLOOR ? '.' : '#';\n\n    display.draw(x, y, glyph, '#aaa', '#000');\n  }\n};\n","import RenderingSystem from './rendering';\n\nexport { RenderingSystem };","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import keymage from 'keymage';\nimport { RunState } from './state';\nimport { Position } from './ecs/components';\nimport { CellType, xyIdx, isBlocked } from './map';\n\ntype Direction = 'N' | 'E' | 'S' |'W';\n\nconst tryMove = (dir: Direction) => (game) => (): void => {\n  const { map, runState } = game.getState(state => ({ runState: state.runState, map: state.map }));\n  const player = game.ecs.entityManager._entities.find(e => e.id === game.playerID);\n  if (runState !== RunState.AWAITINGINPUT) { return; }\n\n  const dirs = {\n    N: [0, -1],\n    E: [1, 0],\n    S: [0, 1],\n    W: [-1, 0]\n  };\n  const [dx, dy] = dirs[dir];\n  const position = player.getComponent(Position);\n  const { x, y } = position;\n  const destinationIdx = xyIdx(x + dx, y + dy);\n\n  if (!isBlocked(map, destinationIdx)) {\n    position.x += dx;\n    position.y += dy;\n  }\n};\n\nconst setupKeys = (game): void => {\n  keymage('k', tryMove('N')(game));\n  keymage('l', tryMove('E')(game));\n  keymage('j', tryMove('S')(game));\n  keymage('h', tryMove('W')(game));\n};\n\nexport default setupKeys;\n","/// keymage.js - Javascript keyboard bindings handling\n/// http://github.com/piranha/keymage\n///\n/// (c) 2012-2016 Alexander Solovyov under terms of ISC License\n\n(function(define, undefined) {\ndefine(function() {\n    var VERSION = '1.1.3';\n    var isOsx = typeof navigator !== 'undefined' &&\n        ~navigator.userAgent.indexOf('Mac OS X');\n\n    // Defining all keys\n    var MODPROPS = ['shiftKey', 'ctrlKey', 'altKey', 'metaKey'];\n    var MODS = {\n        'shift': 'shift',\n        'ctrl': 'ctrl', 'control': 'ctrl',\n        'alt': 'alt', 'option': 'alt',\n        'win': 'meta', 'cmd': 'meta', 'super': 'meta',\n                          'meta': 'meta',\n        // default modifier for os x is cmd and for others is ctrl\n        'defmod':  isOsx ? 'meta' : 'ctrl'\n        };\n    var MODORDER = ['shift', 'ctrl', 'alt', 'meta'];\n    var MODNUMS = [16, 17, 18, 91];\n\n    var KEYS = {\n        'backspace': 8,\n        'tab': 9,\n        'enter': 13, 'return': 13,\n        'pause': 19,\n        'caps': 20, 'capslock': 20,\n        'escape': 27, 'esc': 27,\n        'space': 32,\n        'pgup': 33, 'pageup': 33,\n        'pgdown': 34, 'pagedown': 34,\n        'end': 35,\n        'home': 36,\n        'ins': 45, 'insert': 45,\n        'del': 46, 'delete': 46,\n\n        'left': 37,\n        'up': 38,\n        'right': 39,\n        'down': 40,\n\n        '*': 106,\n        '+': 107, 'plus': 107,\n        'minus': 109,\n        ';': 186,\n        '=': 187,\n        ',': 188,\n        '-': 189,\n        '.': 190,\n        '/': 191,\n        '`': 192,\n        '[': 219,\n        '\\\\': 220,\n        ']': 221,\n        \"'\": 222\n    };\n\n    var i;\n    // numpad\n    for (i = 0; i < 10; i++) {\n        KEYS['num-' + i] = i + 95;\n    }\n    // top row 0-9\n    for (i = 0; i < 10; i++) {\n        KEYS[i.toString()] = i + 48;\n    }\n    // f1-f24\n    for (i = 1; i < 25; i++) {\n        KEYS['f' + i] = i + 111;\n    }\n    // alphabet\n    for (i = 65; i < 91; i++) {\n        KEYS[String.fromCharCode(i).toLowerCase()] = i;\n    }\n\n    // Reverse key codes\n    var KEYREV = {};\n    for (var k in KEYS) {\n        var val = KEYS[k];\n        if (!KEYREV[val] || KEYREV[val].length < k.length) {\n            KEYREV[val] = k;\n        }\n    }\n\n    // -----------------------\n    // Actual work is done here\n\n    var currentScope = '';\n    var allChains = {};\n\n    function parseKeyString(keystring) {\n        var bits = keystring.split(/-(?!$)/);\n        var button = bits[bits.length - 1];\n        var key = {code: KEYS[button]};\n\n        if (!key.code) {\n            throw 'Unknown key \"' + button + '\" in keystring \"' +\n                keystring + '\"';\n        }\n\n        var mod;\n        for (var i = 0; i < bits.length - 1; i++) {\n            button = bits[i];\n            mod = MODS[button];\n            if (!mod) {\n                    throw 'Unknown modifier \"' + button + '\" in keystring \"' +\n                        keystring + '\"';\n            }\n            key[mod] = true;\n        }\n\n        return key;\n    }\n\n    function stringifyKey(key) {\n        var s = '';\n        for (var i = 0; i < MODORDER.length; i++) {\n            if (key[MODORDER[i]]) {\n                s += MODORDER[i] + '-';\n            }\n        }\n        s += KEYREV[key.code];\n        return s;\n    }\n\n    function normalizeKeyChain(keychainString) {\n        var keychain = [];\n        var keys = keychainString.split(' ');\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = parseKeyString(keys[i]);\n            key = stringifyKey(key);\n            keychain.push(key);\n        }\n\n        keychain.original = keychainString;\n        return keychain;\n    }\n\n    function eventKeyString(e) {\n        var key = {code: e.keyCode};\n        for (var i = 0; i < MODPROPS.length; i++) {\n            var mod = MODPROPS[i];\n            if (e[mod]) {\n                key[mod.slice(0, mod.length - 3)] = true;\n            }\n        }\n        return stringifyKey(key);\n    }\n\n    function getNestedChains(chains, scope) {\n        for (var i = 0; i < scope.length; i++) {\n            var bit = scope[i];\n\n            if (bit) {\n                chains = chains[bit];\n            }\n\n            if (!chains) {\n                break;\n            }\n        }\n        return chains;\n    }\n\n    var sequence = [];\n    function dispatch(e) {\n        // Skip all modifiers\n        if (~MODNUMS.indexOf(e.keyCode)) {\n            return;\n        }\n\n        var seq = sequence.slice();\n        seq.push(eventKeyString(e));\n        var scope = currentScope.split('.');\n        var matched, chains, key;\n\n        for (var i = scope.length; i >= 0; i--) {\n            chains = getNestedChains(allChains, scope.slice(0, i));\n            if (!chains) {\n                continue;\n            }\n            matched = true;\n            for (var j = 0; j < seq.length; j++) {\n                key = seq[j];\n                if (!chains[key]) {\n                    matched = false;\n                    break;\n                }\n                chains = chains[key];\n            }\n\n            if (matched) {\n                break;\n            }\n        }\n\n        var definitionScope = scope.slice(0, i).join('.');\n        var preventDefault = chains.preventDefault;\n\n        // partial match, save the sequence\n        if (matched && !chains.handlers) {\n            sequence = seq;\n            if (preventDefault) {\n                e.preventDefault();\n            }\n            return;\n        }\n\n        if (matched) {\n            for (i = 0; i < chains.handlers.length; i++) {\n                var handler = chains.handlers[i];\n                var options = handler._keymage;\n\n                var res = handler.call(options.context, e, {\n                    shortcut: options.original,\n                    scope: currentScope,\n                    definitionScope: definitionScope\n                });\n\n                if (res === false || preventDefault) {\n                    e.preventDefault();\n                }\n            }\n        }\n\n        // either matched or not, drop the sequence\n        sequence = [];\n    }\n\n    function getHandlers(scope, keychain, fn) {\n        var bits = scope.split('.');\n        var chains = allChains;\n        bits = bits.concat(keychain);\n\n        for (var i = 0, l = bits.length; i < l; i++) {\n            var bit = bits[i];\n            if (!bit) continue;\n\n            chains = chains[bit] || (chains[bit] = {});\n            if (fn && fn._keymage.preventDefault) {\n                chains.preventDefault = true;\n            }\n\n            if (i === l - 1) {\n                var handlers = chains.handlers || (chains.handlers = []);\n                return handlers;\n            }\n        }\n    }\n\n    function assignKey(scope, keychain, fn) {\n        var handlers = getHandlers(scope, keychain, fn);\n        handlers.push(fn);\n    }\n\n    function unassignKey(scope, keychain, fn) {\n        var handlers = getHandlers(scope, keychain);\n        var idx = handlers.indexOf(fn);\n        if (~idx) {\n            handlers.splice(idx, 1);\n        }\n    }\n\n    function parsed(scope, keychain, fn, options) {\n        if (keychain === undefined && fn === undefined) {\n            return function(keychain, fn) {\n                return keymage(scope, keychain, fn);\n            };\n        }\n\n        if (typeof keychain === 'function') {\n            options = fn;\n            fn = keychain;\n            keychain = scope;\n            scope = '';\n        }\n\n        var normalized = normalizeKeyChain(keychain);\n\n        return [scope, normalized, fn, options];\n    }\n\n    // optional arguments: scope, options.\n    function keymage(scope, keychain, fn, options) {\n        var args = parsed(scope, keychain, fn, options);\n        fn = args[2];\n        options = args[3];\n        fn._keymage = options || {};\n        fn._keymage.original = keychain;\n        assignKey.apply(null, args);\n\n        return function () {\n            unassignKey.apply(null, args);\n        };\n    }\n\n    keymage.unbind = function(scope, keychain, fn) {\n        var args = parsed(scope, keychain, fn);\n        unassignKey.apply(null, args);\n    };\n\n    keymage.parse = parseKeyString;\n    keymage.stringify = stringifyKey;\n\n    keymage.bindings = allChains;\n\n    keymage.setScope = function(scope) {\n        currentScope = scope ? scope : '';\n    };\n\n    keymage.getScope = function() { return currentScope; };\n\n    keymage.pushScope = function(scope) {\n        currentScope = (currentScope ? currentScope + '.' : '') + scope;\n        return currentScope;\n    };\n\n    keymage.popScope = function(scope) {\n        var i;\n\n        if (!scope) {\n            i = currentScope.lastIndexOf('.');\n            scope = currentScope.slice(i + 1);\n            currentScope = i == -1 ? '' : currentScope.slice(0, i);\n            return scope;\n        }\n\n        currentScope = currentScope.replace(\n            new RegExp('(^|\\\\.)' + scope + '(\\\\.|$).*'), '');\n        return scope;\n    };\n\n    keymage.version = VERSION;\n\n    window.addEventListener('keydown', dispatch, false);\n\n    return keymage;\n});\n})(typeof define !== 'undefined' ? define : function(factory) {\n    if (typeof module !== 'undefined') {\n        module.exports = factory();\n    } else {\n        window.keymage = factory();\n    }\n});\n","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=H[n],o=i?\"function\"==typeof i?i.apply(null,r):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(r.length?\" \"+r.join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function t(n){return!!n&&!!n[B]}function r(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var t=Object.getPrototypeOf(n);return!t||t===Object.prototype}(n)||Array.isArray(n)||!!n[q]||!!n.constructor[q]||c(n)||s(n))}function e(n){if(n&&n[B])return n[B].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:L)(n).forEach((function(r){return t(r,n[r],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[B];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:c(n)?2:s(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function c(n){return $&&n instanceof Map}function s(n){return U&&n instanceof Set}function v(n){return n.o||n.t}function p(t,r){if(void 0===r&&(r=!1),Array.isArray(t))return t.slice();var e=Object.create(Object.getPrototypeOf(t));return i(t,(function(i){if(i!==B){var o=Object.getOwnPropertyDescriptor(t,i),u=o.value;o.get&&(r||n(1),u=o.get.call(t)),o.enumerable?e[i]=u:Object.defineProperty(e,i,{value:u,writable:!0,configurable:!0})}})),e}function d(n,e){t(n)||Object.isFrozen(n)||!r(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=l),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0))}function l(){n(2)}function h(t){var r=Q[t];return r||n(\"production\"!==process.env.NODE_ENV?18:19,t),r}function y(n,t){Q[n]=t}function b(){return\"production\"===process.env.NODE_ENV||J||n(0),J}function m(n,t){t&&(h(\"Patches\"),n.u=[],n.s=[],n.v=t)}function _(n){j(n),n.p.forEach(g),n.p=null}function j(n){n===J&&(J=n.l)}function O(n){return J={p:[],l:J,h:n,m:!0,_:0}}function g(n){var t=n[B];0===t.i||1===t.i?t.j():t.O=!0}function w(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||h(\"ES5\").S(e,t,o),o?(i[B].P&&(_(e),n(4)),r(t)&&(t=S(e,t),e.l||M(e,t)),e.u&&h(\"Patches\").M(i[B],t,e.u,e.s)):t=S(e,i,[]),_(e),e.u&&e.v(e.u,e.s),t!==X?t:void 0}function S(n,t,r){if(Object.isFrozen(t))return t;var e=t[B];if(!e)return i(t,(function(i,o){return P(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return M(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=p(e.k,!0):e.o;i(o,(function(t,i){return P(n,e,o,t,i,r)})),M(n,o,!1),r&&n.u&&h(\"Patches\").R(e,r,n.u,n.s)}return e.o}function P(e,i,c,s,v,p){if(\"production\"!==process.env.NODE_ENV&&v===c&&n(5),t(v)){var d=S(e,v,p&&i&&3!==i.i&&!u(i.D,s)?p.concat(s):void 0);if(h=s,y=d,2===(b=o(l=c))?l.set(h,y):3===b?(l.delete(h),l.add(y)):l[h]=y,!t(d))return;e.m=!1}var l,h,y,b;if((!i||!f(v,a(i.t,s)))&&r(v)){if(!e.h.N&&e._<1)return;S(e,v),i&&i.A.l||M(e,v)}}function M(n,t,r){void 0===r&&(r=!1),n.h.N&&n.m&&d(t,r)}function A(n,t){var r=n[B],e=Reflect.getOwnPropertyDescriptor(r?v(r):n,t);return e&&e.value}function z(n){if(!n.P){if(n.P=!0,0===n.i||1===n.i){var t=n.o=p(n.t);i(n.p,(function(n,r){t[n]=r})),n.p=void 0}n.l&&z(n.l)}}function x(n){n.o||(n.o=p(n.t))}function I(n,t,r){var e=c(t)?h(\"MapSet\").T(t,r):s(t)?h(\"MapSet\").F(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:b(),P:!1,I:!1,D:{},l:t,t:n,k:null,p:{},o:null,j:null,C:!1},i=e,o=V;r&&(i=[e],o=Y);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):h(\"ES5\").J(t,r);return(r?r.A:b()).p.push(e),e}function E(n,t){n.g?z(t):h(\"ES5\").K(t)}function k(){function e(n,t){var r=n[B];if(r&&!r.$){r.$=!0;var e=n[t];return r.$=!1,e}return n[t]}function o(n){n.P||(n.P=!0,n.l&&o(n.l))}function a(n){n.o||(n.o=c(n.t))}function c(n){var t=n&&n[B];if(t){t.$=!0;var r=p(t.k,!0);return t.$=!1,r}return p(n)}function s(n){for(var t=n.length-1;t>=0;t--){var r=n[t][B];if(!r.P)switch(r.i){case 5:l(r)&&o(r);break;case 4:d(r)&&o(r)}}}function d(n){for(var t=n.t,r=n.k,e=Object.keys(r),i=e.length-1;i>=0;i--){var o=e[i],a=t[o];if(void 0===a&&!u(t,o))return!0;var c=r[o],s=c&&c[B];if(s?s.t!==a:!f(c,a))return!0}return e.length!==Object.keys(t).length}function l(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function h(t){t.O&&n(3,JSON.stringify(v(t)))}var m={};y(\"ES5\",{J:function(n,t){var u=Array.isArray(n),s=c(n);i(s,(function(t){!function(n,t,i){var u=m[t];u?u.enumerable=i:m[t]=u={enumerable:i,get:function(){return function(n,t){h(n);var i=e(v(n),t);return n.$?i:i===e(n.t,t)&&r(i)?(a(n),n.o[t]=I(n.A.h,i,n)):i}(this[B],t)},set:function(n){!function(n,t,r){if(h(n),n.D[t]=!0,!n.P){if(f(r,e(v(n),t)))return;o(n),a(n)}n.o[t]=r}(this[B],t,n)}},Object.defineProperty(n,t,u)}(s,t,u||function(n,t){var r=Object.getOwnPropertyDescriptor(n,t);return!(!r||!r.enumerable)}(n,t))}));var p={i:u?5:4,A:t?t.A:b(),P:!1,$:!1,I:!1,D:{},l:t,t:n,k:s,o:null,O:!1,C:!1};return Object.defineProperty(s,B,{value:p,writable:!0}),s},K:o,S:function(n,r,e){n.p.forEach((function(n){n[B].$=!0})),e?t(r)&&r[B].A===n&&s(n.p):(n.u&&function n(t){if(t&&\"object\"==typeof t){var r=t[B];if(r){var e=r.t,a=r.k,f=r.D,c=r.i;if(4===c)i(a,(function(t){t!==B&&(void 0!==e[t]||u(e,t)?f[t]||n(a[t]):(f[t]=!0,o(r)))})),i(e,(function(n){void 0!==a[n]||u(a,n)||(f[n]=!1,o(r))}));else if(5===c){if(l(r)&&(o(r),f.length=!0),a.length<e.length)for(var s=a.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<a.length;v++)f[v]=!0;for(var p=Math.min(a.length,e.length),d=0;d<p;d++)void 0===f[d]&&n(a[d])}}}}(n.p[0]),s(n.p))}})}function R(){function r(n){if(!n||\"object\"!=typeof n)return n;if(Array.isArray(n))return n.map(r);if(c(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],r(n[1])]})));if(s(n))return new Set(Array.from(n).map(r));var t=Object.create(Object.getPrototypeOf(n));for(var e in n)t[e]=r(n[e]);return t}function e(n){return t(n)?r(n):n}var f=\"add\";y(\"Patches\",{U:function(t,e){return e.forEach((function(e){for(var i=e.path,u=e.op,c=t,s=0;s<i.length-1;s++)\"object\"!=typeof(c=a(c,i[s]))&&n(15,i.join(\"/\"));var v=o(c),p=r(e.value),d=i[i.length-1];switch(u){case\"replace\":switch(v){case 2:return c.set(d,p);case 3:n(16);default:return c[d]=p}case f:switch(v){case 1:return c.splice(d,0,p);case 2:return c.set(d,p);case 3:return c.add(p);default:return c[d]=p}case\"remove\":switch(v){case 1:return c.splice(d,1);case 2:return c.delete(d);case 3:return c.delete(e.value);default:return delete c[d]}default:n(17,u)}})),t},R:function(n,t,r,o){switch(n.i){case 0:case 4:case 2:return function(n,t,r,o){var c=n.t,s=n.o;i(n.D,(function(n,i){var v=a(c,n),p=a(s,n),d=i?u(c,n)?\"replace\":f:\"remove\";if(v!==p||\"replace\"!==d){var l=t.concat(n);r.push(\"remove\"===d?{op:d,path:l}:{op:d,path:l,value:p}),o.push(d===f?{op:\"remove\",path:l}:\"remove\"===d?{op:f,path:l,value:e(v)}:{op:\"replace\",path:l,value:e(v)})}}))}(n,t,r,o);case 5:case 1:return function(n,t,r,i){var o=n.t,u=n.D,a=n.o;if(a.length<o.length){var c=[a,o];o=c[0],a=c[1];var s=[i,r];r=s[0],i=s[1]}for(var v=a.length-o.length,p=0;o[p]===a[p]&&p<o.length;)++p;for(var d=o.length;d>p&&o[d-1]===a[d+v-1];)--d;for(var l=p;l<d;++l)if(u[l]&&a[l]!==o[l]){var h=t.concat([l]);r.push({op:\"replace\",path:h,value:e(a[l])}),i.push({op:\"replace\",path:h,value:e(o[l])})}for(var y=r.length,b=d+v-1;b>=d;--b){var m=t.concat([b]);r[y+b-d]={op:f,path:m,value:e(a[b])},i.push({op:\"remove\",path:m})}}(n,t,r,o);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:\"remove\",path:i,value:n}),e.unshift({op:f,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:f,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,t,r,o)}},M:function(n,t,r,e){r.push({op:\"replace\",path:[],value:t}),e.push({op:\"replace\",path:[],value:n.t})}})}function D(){function t(n,t){function r(){this.constructor=n}u(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function i(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=I(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function o(t){t.O&&n(3,JSON.stringify(v(t)))}var u=function(n,t){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},a=function(){function n(n,t){return this[B]={i:2,l:t,A:t?t.A:b(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var i=n.prototype;return Object.defineProperty(i,\"size\",{get:function(){return v(this[B]).size}}),i.has=function(n){return v(this[B]).has(n)},i.set=function(n,t){var r=this[B];return o(r),v(r).get(n)!==t&&(e(r),E(r.A.h,r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},i.delete=function(n){if(!this.has(n))return!1;var t=this[B];return o(t),e(t),E(t.A.h,t),t.D.set(n,!1),t.o.delete(n),!0},i.clear=function(){var n=this[B];return o(n),e(n),E(n.A.h,n),n.D=new Map,n.o.clear()},i.forEach=function(n,t){var r=this;v(this[B]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},i.get=function(n){var t=this[B];o(t);var i=v(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var u=I(t.A.h,i,t);return e(t),t.o.set(n,u),u},i.keys=function(){return v(this[B]).keys()},i.values=function(){var n,t=this,r=this.keys();return(n={})[G]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},i.entries=function(){var n,t=this,r=this.keys();return(n={})[G]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},i[G]=function(){return this.entries()},n}(),f=function(){function n(n,t){return this[B]={i:3,l:t,A:t?t.A:b(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,\"size\",{get:function(){return v(this[B]).size}}),r.has=function(n){var t=this[B];return o(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[B];return o(t),t.o?t.o.add(n):t.t.has(n)||(i(t),E(t.A.h,t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[B];return o(t),i(t),E(t.A.h,t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[B];return o(n),i(n),E(n.A.h,n),n.o.clear()},r.values=function(){var n=this[B];return o(n),i(n),n.o.values()},r.entries=function(){var n=this[B];return o(n),i(n),n.o.entries()},r.keys=function(){return this.values()},r[G]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();y(\"MapSet\",{T:function(n,t){return new a(n,t)},F:function(n,t){return new f(n,t)}})}function N(){k(),D(),R()}function T(n){return n}function F(n){return n}var C,J,K=\"undefined\"!=typeof Symbol,$=\"undefined\"!=typeof Map,U=\"undefined\"!=typeof Set,W=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,X=K?Symbol(\"immer-nothing\"):((C={})[\"immer-nothing\"]=!0,C),q=K?Symbol(\"immer-draftable\"):\"__$immer_draftable\",B=K?Symbol(\"immer-state\"):\"__$immer_state\",G=K?Symbol.iterator:\"@@iterator\",H={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},19:\"plugin not loaded\",20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\"},L=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,Q={},V={get:function(n,t){if(t===B)return n;var e=n.p;if(!n.P&&u(e,t))return e[t];var i=v(n)[t];if(n.I||!r(i))return i;if(n.P){if(i!==A(n.t,t))return i;e=n.o}return e[t]=I(n.A.h,i,n)},has:function(n,t){return t in v(n)},ownKeys:function(n){return Reflect.ownKeys(v(n))},set:function(n,t,r){if(!n.P){var e=A(n.t,t);if(r?f(e,r)||r===n.p[t]:f(e,r)&&t in n.t)return!0;x(n),z(n)}return n.D[t]=!0,n.o[t]=r,!0},deleteProperty:function(n,t){return void 0!==A(n.t,t)||t in n.t?(n.D[t]=!1,x(n),z(n)):n.D[t]&&delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=v(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e&&(e.writable=!0,e.configurable=1!==n.i||\"length\"!==t),e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},Y={};i(V,(function(n,t){Y[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Y.deleteProperty=function(t,r){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(r))&&n(13),V.deleteProperty.call(this,t[0],r)},Y.set=function(t,r,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==r&&isNaN(parseInt(r))&&n(14),V.set.call(this,t[0],r,e,t[0])};var Z=function(){function e(n){this.g=W,this.N=\"production\"!==process.env.NODE_ENV,\"boolean\"==typeof(null==n?void 0:n.useProxies)&&this.setUseProxies(n.useProxies),\"boolean\"==typeof(null==n?void 0:n.autoFreeze)&&this.setAutoFreeze(n.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var i=e.prototype;return i.produce=function(t,e,i){if(\"function\"==typeof t&&\"function\"!=typeof e){var o=e;e=t;var u=this;return function(n){var t=this;void 0===n&&(n=o);for(var r=arguments.length,i=Array(r>1?r-1:0),a=1;a<r;a++)i[a-1]=arguments[a];return u.produce(n,(function(n){var r;return(r=e).call.apply(r,[t,n].concat(i))}))}}var a;if(\"function\"!=typeof e&&n(6),void 0!==i&&\"function\"!=typeof i&&n(7),r(t)){var f=O(this),c=I(this,t,void 0),s=!0;try{a=e(c),s=!1}finally{s?_(f):j(f)}return\"undefined\"!=typeof Promise&&a instanceof Promise?a.then((function(n){return m(f,i),w(n,f)}),(function(n){throw _(f),n})):(m(f,i),w(a,f))}if((a=e(t))!==X)return void 0===a&&(a=t),this.N&&d(a,!0),a},i.produceWithPatches=function(n,t){var r,e,i=this;return\"function\"==typeof n?function(t){for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return i.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(e))}))}:[this.produce(n,t,(function(n,t){r=n,e=t})),r,e]},i.createDraft=function(t){r(t)||n(8);var e=O(this),i=I(this,t,void 0);return i[B].C=!0,j(e),i},i.finishDraft=function(t,r){var e=t&&t[B];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return m(i,r),w(void 0,i)},i.setAutoFreeze=function(n){this.N=n},i.setUseProxies=function(t){W||n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}var o=h(\"Patches\").U;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),nn=new Z,tn=nn.produce,rn=nn.produceWithPatches.bind(nn),en=nn.setAutoFreeze.bind(nn),on=nn.setUseProxies.bind(nn),un=nn.applyPatches.bind(nn),an=nn.createDraft.bind(nn),fn=nn.finishDraft.bind(nn);export default tn;export{Z as Immer,un as applyPatches,T as castDraft,F as castImmutable,an as createDraft,N as enableAllPlugins,k as enableES5,D as enableMapSet,R as enablePatches,fn as finishDraft,q as immerable,t as isDraft,r as isDraftable,X as nothing,e as original,tn as produce,rn as produceWithPatches,en as setAutoFreeze,on as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","const tileMap = (): { [char: string]: [number, number] } => {\n  const [W, H] = [8, 16];\n  return {\n    '☺': [1 * W, 0 * H],\n    '☻': [2 * W, 0 * H],\n    '♥': [3 * W, 0 * H],\n    '♦': [4 * W, 0 * H],\n    '♣': [5 * W, 0 * H],\n    '♠': [6 * W, 0 * H],\n    '•': [7 * W, 0 * H],\n    '◘': [8 * W, 0 * H],\n    '♂': [11 * W, 0 * H],\n    '♀': [12 * W, 0 * H],\n    '♫': [14 * W, 0 * H],\n    '☼': [15 * W, 0 * H],\n    '►': [0 * W, 1 * H],\n    '◄': [1 * W, 1 * H],\n    '↕': [2 * W, 1 * H],\n    '‼': [3 * W, 1 * H],\n    '¶': [4 * W, 1 * H],\n    '§': [5 * W, 1 * H],\n    '▬': [6 * W, 1 * H],\n    '↨': [7 * W, 1 * H],\n    '↑': [8 * W, 1 * H],\n    '↓': [9 * W, 1 * H],\n    '→': [10 * W, 1 * H],\n    '←': [11 * W, 1 * H],\n    '∟': [12 * W, 1 * H],\n    '↔': [13 * W, 1 * H],\n    '▲': [14 * W, 1 * H],\n    '▼': [15 * W, 1 * H],\n    '!': [1 * W, 2 * H],\n    '\"': [2 * W, 2 * H],\n    '#': [3 * W, 2 * H],\n    '$': [4 * W, 2 * H],\n    '%': [5 * W, 2 * H],\n    '&': [6 * W, 2 * H],\n    '\\'': [7 * W, 2 * H],\n    '(': [8 * W, 2 * H],\n    ')': [9 * W, 2 * H],\n    '*': [10 * W, 2 * H],\n    '+': [11 * W, 2 * H],\n    ',': [12 * W, 2 * H],\n    '-': [13 * W, 2 * H],\n    '.': [14 * W, 2 * H],\n    '/': [15 * W, 2 * H],\n    '0': [0 * W, 3 * H],\n    '1': [1 * W, 3 * H],\n    '2': [2 * W, 3 * H],\n    '3': [3 * W, 3 * H],\n    '4': [4 * W, 3 * H],\n    '5': [5 * W, 3 * H],\n    '6': [6 * W, 3 * H],\n    '7': [7 * W, 3 * H],\n    '8': [8 * W, 3 * H],\n    '9': [9 * W, 3 * H],\n    ':': [10 * W, 3 * H],\n    ';': [11 * W, 3 * H],\n    '<': [12 * W, 3 * H],\n    '=': [13 * W, 3 * H],\n    '>': [14 * W, 3 * H],\n    '?': [15 * W, 3 * H],\n    '@': [0 * W, 4 * H],\n    'A': [1 * W, 4 * H],\n    'B': [2 * W, 4 * H],\n    'C': [3 * W, 4 * H],\n    'D': [4 * W, 4 * H],\n    'E': [5 * W, 4 * H],\n    'F': [6 * W, 4 * H],\n    'G': [7 * W, 4 * H],\n    'H': [8 * W, 4 * H],\n    'I': [9 * W, 4 * H],\n    'J': [10 * W, 4 * H],\n    'K': [11 * W, 4 * H],\n    'L': [12 * W, 4 * H],\n    'M': [13 * W, 4 * H],\n    'N': [14 * W, 4 * H],\n    'O': [15 * W, 4 * H],\n    'P': [0 * W, 5 * H],\n    'Q': [1 * W, 5 * H],\n    'R': [2 * W, 5 * H],\n    'S': [3 * W, 5 * H],\n    'T': [4 * W, 5 * H],\n    'U': [5 * W, 5 * H],\n    'V': [6 * W, 5 * H],\n    'W': [7 * W, 5 * H],\n    'X': [8 * W, 5 * H],\n    'Y': [9 * W, 5 * H],\n    'Z': [10 * W, 5 * H],\n    '[': [11 * W, 5 * H],\n    '\\\\': [12 * W, 5 * H],\n    ']': [13 * W, 5 * H],\n    '^': [14 * W, 5 * H],\n    '_': [15 * W, 5 * H],\n    '`': [0 * W, 6 * H],\n    'a': [1 * W, 6 * H],\n    'b': [2 * W, 6 * H],\n    'c': [3 * W, 6 * H],\n    'd': [4 * W, 6 * H],\n    'e': [5 * W, 6 * H],\n    'f': [6 * W, 6 * H],\n    'g': [7 * W, 6 * H],\n    'h': [8 * W, 6 * H],\n    'i': [9 * W, 6 * H],\n    'j': [10 * W, 6 * H],\n    'k': [11 * W, 6 * H],\n    'l': [12 * W, 6 * H],\n    'm': [13 * W, 6 * H],\n    'n': [14 * W, 6 * H],\n    'o': [15 * W, 6 * H],\n    'p': [0 * W, 7 * H],\n    'q': [1 * W, 7 * H],\n    'r': [2 * W, 7 * H],\n    's': [3 * W, 7 * H],\n    't': [4 * W, 7 * H],\n    'u': [5 * W, 7 * H],\n    'v': [6 * W, 7 * H],\n    'w': [7 * W, 7 * H],\n    'x': [8 * W, 7 * H],\n    'y': [9 * W, 7 * H],\n    'z': [10 * W, 7 * H],\n    '{': [11 * W, 7 * H],\n    '|': [12 * W, 7 * H],\n    '}': [13 * W, 7 * H],\n    '~': [14 * W, 7 * H],\n    '⌂': [15 * W, 7 * H],\n    'Ç': [0 * W, 8 * H],\n    'ü': [1 * W, 8 * H],\n    'é': [2 * W, 8 * H],\n    'â': [3 * W, 8 * H],\n    'ä': [4 * W, 8 * H],\n    'à': [5 * W, 8 * H],\n    'å': [6 * W, 8 * H],\n    'ç': [7 * W, 8 * H],\n    'ê': [8 * W, 8 * H],\n    'ë': [9 * W, 8 * H],\n    'è': [10 * W, 8 * H],\n    'ï': [11 * W, 8 * H],\n    'î': [12 * W, 8 * H],\n    'ì': [13 * W, 8 * H],\n    'Ä': [14 * W, 8 * H],\n    'Å': [15 * W, 8 * H],\n    'É': [0 * W, 9 * H],\n    'æ': [1 * W, 9 * H],\n    'Æ': [2 * W, 9 * H],\n    'ô': [3 * W, 9 * H],\n    'ö': [4 * W, 9 * H],\n    'ò': [5 * W, 9 * H],\n    'û': [6 * W, 9 * H],\n    'ù': [7 * W, 9 * H],\n    'ÿ': [8 * W, 9 * H],\n    'Ö': [9 * W, 9 * H],\n    'Ü': [10 * W, 9 * H],\n    '¢': [11 * W, 9 * H],\n    '£': [12 * W, 9 * H],\n    '¥': [13 * W, 9 * H],\n    '₧': [14 * W, 9 * H],\n    'ƒ': [15 * W, 9 * H],\n    'á': [0 * W, 10 * H],\n    'í': [1 * W, 10 * H],\n    'ó': [2 * W, 10 * H],\n    'ú': [3 * W, 10 * H],\n    'ñ': [4 * W, 10 * H],\n    'Ñ': [5 * W, 10 * H],\n    'ª': [6 * W, 10 * H],\n    'º': [7 * W, 10 * H],\n    '¿': [8 * W, 10 * H],\n    '⌐': [9 * W, 10 * H],\n    '¬': [10 * W, 10 * H],\n    '½': [11 * W, 10 * H],\n    '¼': [12 * W, 10 * H],\n    '¡': [13 * W, 10 * H],\n    '«': [14 * W, 10 * H],\n    '»': [15 * W, 10 * H],\n    '░': [0 * W, 11 * H],\n    '▒': [1 * W, 11 * H],\n    '▓': [2 * W, 11 * H],\n    '│': [3 * W, 11 * H],\n    '┤': [4 * W, 11 * H],\n    '╡': [5 * W, 11 * H],\n    '╢': [6 * W, 11 * H],\n    '╖': [7 * W, 11 * H],\n    '╕': [8 * W, 11 * H],\n    '╣': [9 * W, 11 * H],\n    '║': [10 * W, 11 * H],\n    '╗': [11 * W, 11 * H],\n    '╝': [12 * W, 11 * H],\n    '╜': [13 * W, 11 * H],\n    '╛': [14 * W, 11 * H],\n    '┐': [15 * W, 11 * H],\n    '└': [0 * W, 12 * H],\n    '┴': [1 * W, 12 * H],\n    '┬': [2 * W, 12 * H],\n    '├': [3 * W, 12 * H],\n    '─': [4 * W, 12 * H],\n    '┼': [5 * W, 12 * H],\n    '╞': [6 * W, 12 * H],\n    '╟': [7 * W, 12 * H],\n    '╚': [8 * W, 12 * H],\n    '╔': [9 * W, 12 * H],\n    '╩': [10 * W, 12 * H],\n    '╦': [11 * W, 12 * H],\n    '╠': [12 * W, 12 * H],\n    '═': [13 * W, 12 * H],\n    '╬': [14 * W, 12 * H],\n    '╧': [15 * W, 12 * H],\n    '╨': [0 * W, 13 * H],\n    '╤': [1 * W, 13 * H],\n    '╥': [2 * W, 13 * H],\n    '╙': [3 * W, 13 * H],\n    '╘': [4 * W, 13 * H],\n    '╒': [5 * W, 13 * H],\n    '╓': [6 * W, 13 * H],\n    '╫': [7 * W, 13 * H],\n    '╪': [8 * W, 13 * H],\n    '┘': [9 * W, 13 * H],\n    '┌': [10 * W, 13 * H],\n    '█': [11 * W, 13 * H],\n    '▄': [12 * W, 13 * H],\n    '▌': [13 * W, 13 * H],\n    '▐': [14 * W, 13 * H],\n    '▀': [15 * W, 13 * H],\n    'α': [0 * W, 14 * H],\n    'ß': [1 * W, 14 * H],\n    'Γ': [2 * W, 14 * H],\n    'π': [3 * W, 14 * H],\n    'Σ': [4 * W, 14 * H],\n    'σ': [5 * W, 14 * H],\n    'µ': [6 * W, 14 * H],\n    'τ': [7 * W, 14 * H],\n    'Φ': [8 * W, 14 * H],\n    'Θ': [9 * W, 14 * H],\n    'Ω': [10 * W, 14 * H],\n    'δ': [11 * W, 14 * H],\n    '∞': [12 * W, 14 * H],\n    'φ': [13 * W, 14 * H],\n    'ε': [14 * W, 14 * H],\n    '∩': [15 * W, 14 * H],\n    '≡': [0 * W, 15 * H],\n    '±': [1 * W, 15 * H],\n    '≥': [2 * W, 15 * H],\n    '≤': [3 * W, 15 * H],\n    '⌠': [4 * W, 15 * H],\n    '⌡': [5 * W, 15 * H],\n    '÷': [6 * W, 15 * H],\n    '≈': [7 * W, 15 * H],\n    '°': [8 * W, 15 * H],\n    '∙': [9 * W, 15 * H],\n    '·': [10 * W, 15 * H],\n    '√': [11 * W, 15 * H],\n    'ⁿ': [12 * W, 15 * H],\n    '²': [13 * W, 15 * H],\n    '■': [14 * W, 15 * H],\n    ' ': [15 * W, 15 * H],\n  };\n};\n\nexport default tileMap;\n","import * as ROT from 'rot-js';\nimport { System } from 'ecsy';\nimport { Position, Renderable } from '../components';\nimport { display } from '../..';\n\nclass RenderingSystem extends System {\n  display: ROT.Display;\n\n  execute(delta: number, time: number): void {\n    this.queries.renderables.results.forEach(entity => {\n      const position = entity.getComponent(Position);\n      const renderable = entity.getComponent(Renderable);\n      display.draw(\n        position.x,\n        position.y,\n        renderable.glyph,\n        renderable.fg,\n        renderable.bg\n      );\n    });\n  }\n}\n\nRenderingSystem.queries = {\n  renderables: { components: [ Position, Renderable ]}\n};\n\nexport default RenderingSystem;\n","import { Component } from 'ecsy';\n\nclass Renderable extends Component {\n  glyph: string;\n  fg: string;\n  bg: string;\n\n  constructor() {\n    super();\n    this.glyph = null;\n    this.fg = null;\n    this.bg = null;\n  }\n\n  reset() {\n    this.glyph = null;\n    this.fg = null;\n    this.bg = null;\n  }\n}\n\nexport default Renderable;\n","import { Component } from 'ecsy';\n\nclass Position extends Component {\n  x: number;\n  y: number;\n\n  constructor() {\n    super();\n    this.x = 1;\n    this.y = 1;\n  }\n\n  reset(): void {\n    this.x = 1;\n    this.y = 0;\n  }\n}\n\nexport default Position;\n","import { State, createSetter } from './state';\n\nexport const setRunState = createSetter(\n  'SET_RUN_STATE',\n  (runState) => (state: State): void => {\n    state.runState = runState;\n  }\n);\n","import createPlayer from './player';\n\nexport {\n  createPlayer\n};","import { World, Entity } from 'ecsy';\n\nimport { Position, Renderable } from '../components/';\n\nconst createPlayer = (ecs: World, x: number, y: number): number => {\n  const player = (ecs as World)\n    .createEntity()\n    .addComponent(Position, { x, y })\n    .addComponent(Renderable, { glyph: '@', fg: '#ff0' });\n  return player.id;\n};\n\nexport default createPlayer;\n","export default __webpack_public_path__ + \"images/VGA8x16.png\";"],"sourceRoot":""}